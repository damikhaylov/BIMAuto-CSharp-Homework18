using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Task1
{
    class Program
    {
        static void Main(string[] args)
        {
            /*
            Дана строка, содержащая скобки трёх видов (круглые, квадратные и фигурные) и любые другие символы.
            Проверить, корректно ли в ней расставлены скобки. Например, в строке ([]{})[] скобки расставлены корректно,
            а в строке ([]] — нет. Указание: задача решается однократным проходом по символам заданной строки слева
            направо; для каждой открывающей скобки в строке в стек помещается соответствующая закрывающая, каждая
            закрывающая скобка в строке должна соответствовать скобке из вершины стека (при этом скобка с вершины стека
            снимается); в конце прохода стек должен быть пуст.
             */
            Console.WriteLine("Проверка корректности расстановки скобок в строке.\n");
            Console.Write("Введите строку со скобками: ");
            string str = Console.ReadLine();
            bool isIncorrectClosingBracket = false; // Признак закрывающей скобки, которая появляется раньше,
                                                    // чем парная открывающая
            Stack<char> stack = new Stack<char>(); // Стэк для учёта скобок

            // Выполняем посимвольную проверку строки
            for (int i = 0; i < str.Length; i++)
            {
                switch (str[i])
                {
                    // Для каждой открывающей скобки в строке в стек помещается соответствующая закрывающая
                    case '(':
                        stack.Push(')');
                        break;
                    case '[':
                        stack.Push(']');
                        break;
                    case '{':
                        stack.Push('}');
                        break;
                    default: // Если очередной символ не совпал ни с одним видом открывающих скобок
                        // Проверяем, является ли он закрывающей скобкой
                        if (str[i] == ')' || str[i] == ']' || str[i] == '}')
                        {
                            // Если стэк при этом непуст, значит, в строке уже появлялись открывающие скобки
                            // потенциально парные нашей закрывающей
                            if (stack.Count > 0)
                            {
                                // Проверяем, парна ли наша закрывающая скобка той, которая вызвала последнюю запись
                                // в стэке   
                                if (str[i] == stack.Peek())
                                { // Закрывающая скобка корректно закрывает парную открывающую скобку
                                    stack.Pop(); // Скобка снимается с вершины стэка
                                }
                                else
                                {
                                    // Закрывающая скобка непарна предыдущей открывающей скобке
                                    // Отсюда сразу ясно, что скобки расставлены некорректно.
                                    isIncorrectClosingBracket = true;
                                }
                            } else
                            {
                                // Если встретилась закрывающая скобка, а стэк пуст, значит закрывающая скобка
                                // появляется в строке раньше, чем любая потенциально парная ей открывающая.
                                // Отсюда сразу ясно, что скобки расставлены некорректно.
                                isIncorrectClosingBracket = true;
                            }
                        }
                        break;
                }
                // Если при проверках выше обнаружено, что очередной символ - некорректная закрывающая скобка,
                // то далнейший перебор строки в цикле прерывается.
                if (isIncorrectClosingBracket) break;
            }

            if (!isIncorrectClosingBracket)
            {
                if (stack.Count == 0)
                {
                    Console.WriteLine("\nСкобки в строке (если они имеются) расставлены корректно."); 
                }
                else
                {
                    Console.WriteLine("\nВ строке присутствуют незакрытые скобки ({0} шт.).", stack.Count);
                }
            }
            else
            {
                Console.WriteLine("\nВ строке имеются закрывающие скобки без парных открывающих.");
            }
            Console.ReadKey();
        }
    }
}
